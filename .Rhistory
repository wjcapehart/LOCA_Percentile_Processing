x = c(1.,2.,3.,4.)
quantile(x)
quantile(x, type=1)
quantile(x, type=2)
quantile(x, type=3)
quantile(x, type=4)
quantile(x, type=5)
quantile(x, type=6)
quantile(x, type=7)
quantile(x, type=8)
quantile(x, type=9)
exit
exit
q()
directory = "/maelstrom2/LOCA_GRIDDED_ENSEMBLES/LOCA_NGP/climate_divisions/"
rData_files = intersect(list.files(path    = directory,
pattern = "NGP_LOCA_nCLIMDIV_"),
list.files(path    = directory,
pattern = "RData"))
rData_files
rData_files = intersect(list.files(path    = directory,
pattern = "NGP_LOCA_nCLIMDIV_"),
list.files(path    = directory,
pattern = "_Yearly.RData"))
Completed_Divisions = str_sub(string = rData_files,
start  = str_length(string = prefix) + 1,
end    = str_length(string = prefix) + 4)
library(stringr)
library(forcats)
library(readr)
library(tidyverse)
library(lubridate)
rData_files = intersect(list.files(path    = directory,
pattern = "NGP_LOCA_nCLIMDIV_"),
list.files(path    = directory,
pattern = "_Yearly.RData"))
Completed_Divisions = str_sub(string = rData_files,
start  = str_length(string = prefix) + 1,
end    = str_length(string = prefix) + 4)
prefix    = "NGP_LOCA_nCLIMDIV_"
rData_files = intersect(list.files(path    = directory,
pattern = "NGP_LOCA_nCLIMDIV_"),
list.files(path    = directory,
pattern = "_Yearly.RData"))
Completed_Divisions = str_sub(string = rData_files,
start  = str_length(string = prefix) + 1,
end    = str_length(string = prefix) + 4)
save(Completed_Divisions, file = str_c(directory,
"Completed_Divisions",
".RData",
sep=""))
rData_files = intersect(list.files(path    = directory,
pattern = "NGP_LOCA_nCLIMDIV_"),
list.files(path    = directory,
pattern = "_Yearly.RData"))
Completed_Divisions = str_sub(string = rData_files,
start  = str_length(string = prefix) + 1,
end    = str_length(string = prefix) + 4)
save(Completed_Divisions, file = str_c(directory,
"Completed_Divisions",
".RData",
sep=""))
print(rData_files)
rData_files = intersect(list.files(path    = directory,
pattern = "NGP_LOCA_nCLIMDIV_"),
list.files(path    = directory,
pattern = "_Yearly.RData"))
Completed_Divisions = str_sub(string = rData_files,
start  = str_length(string = prefix) + 1,
end    = str_length(string = prefix) + 4)
save(Completed_Divisions, file = str_c(directory,
"Completed_Divisions",
".RData",
sep=""))
print(Completed_Divisions)
library(stringr)
library(forcats)
library(readr)
library(tidyverse)
library(lubridate)
library(ncdf4)
directory = "/maelstrom2/LOCA_GRIDDED_ENSEMBLES/LOCA_NGP/huc_08_basins/"
prefix    = "NGP_LOCA_HUC08_"
csv_files = intersect(list.files(path    = directory,
pattern = prefix),
list.files(path    = directory,
pattern = ".csv"))
for (csv_file in csv_files) {
shell_command = str_c("ls -altr ",
csv_file,
sep = "")
a <- system(shell_command, intern = TRUE)
a
}
for (csv_file in csv_files) {
shell_command = str_c("ls -altr ",
directory,
csv_file,
sep = "")
a <- system(shell_command, intern = TRUE)
a
}
for (csv_file in csv_files) {
for (csv_file in csv_files) {
shell_command = str_c("ls -altr ",
directory,
csv_file,
sep = "")
shell_command
# a <- system(shell_command, intern = TRUE)
}
}
directory = "/maelstrom2/LOCA_GRIDDED_ENSEMBLES/LOCA_NGP/huc_08_basins/"
prefix    = "NGP_LOCA_HUC08_"
csv_files = intersect(list.files(path    = directory,
pattern = prefix),
list.files(path    = directory,
pattern = ".csv"))
for (csv_file in csv_files) {
shell_command = str_c("ls -altr ",
directory,
csv_file,
sep = "")
shell_command
# a <- system(shell_command, intern = TRUE)
}
directory = "/maelstrom2/LOCA_GRIDDED_ENSEMBLES/LOCA_NGP/huc_08_basins/"
prefix    = "NGP_LOCA_HUC08_"
csv_files = intersect(list.files(path    = directory,
pattern = prefix),
list.files(path    = directory,
pattern = ".csv"))
csv_files
csv_files = list.files(path    = directory,
pattern = ".csv")
csv_files
library(stringr)
library(forcats)
library(readr)
library(tidyverse)
library(lubridate)
library(ncdf4)
directory = "/maelstrom2/LOCA_GRIDDED_ENSEMBLES/LOCA_NGP/huc_08_basins/"
prefix    = "NGP_LOCA_HUC08_"
csv_files = intersect(list.files(path    = directory,
pattern = prefix),
list.files(path    = directory,
pattern = ".csv"))
csv_files = list.files(path    = directory,
pattern = ".csv")
csv_files
for (csv_file in csv_files) {
shell_command = str_c("ls -altr ",
directory,
csv_file,
sep = "")
shell_command
# a <- system(shell_command, intern = TRUE)
}
csv_file  = csv_files[1]
shell_command = str_c("ls -altr ",
directory,
csv_file,
sep = "")
shell_command
system(shell_command, intern = TRUE)
shell_command = str_c("tail -n 1  ",
directory,
csv_file,
"| grep 'bcc-csm1-1-m_r1i1p1,rcp85,MEAN' | grep '2099-12-31'",
sep = "")
shell_command
system(shell_command, intern = TRUE)
csv_files = intersect(list.files(path    = directory,
pattern = prefix),
list.files(path    = directory,
pattern = ".csv"))
csv_files
list.files(path    = directory,
pattern = prefix)
list.files(path    = directory,
pattern = ".csv")
csv_files = list.files(path    = directory,
pattern = ".csv")
csv_files
for (csv_file in csv_files) {
shell_command = str_c("tail -n 1  ",
directory,
csv_file,
sep = "") #                         " | grep bcc-csm1-1-m_r1i1p1,rcp85,MEAN | grep 2099-12-31",
a = system(shell_command, intern = TRUE)
if (str_detect(a,"bcc-csm1-1-m_r1i1p1,rcp85,MEAN") &
str_detect(a,"2099-12-31" )) {
print(csv_file)
}
}
Divisions = str_sub(string = csv_files,
start  = str_length(string = prefix) + 1,
end    = str_length(string = prefix) + 8)
print(Divisions)
division = Divisions[1]
filename = str_c(directory,
"NGP_LOCA_HUC08_",
division,
sep = "")
filename
filename = str_c(directory,
"NGP_LOCA_HUC08_",
division,
sep = "")
print(filename)
print(loca_daily$Division[1])
print(filename)
shell_command = str_c("tail -n 1  ",
filename,
".csv",
sep = "")
shell_command
shell_command = str_c("tail -n 1  ",
filename,
".csv",
sep = "")
a = system(shell_command, intern = TRUE)
a
if (str_detect(a,"bcc-csm1-1-m_r1i1p1,rcp85,MEAN") &
str_detect(a,"2099-12-31" )) {
print(csv_file)
}
if (str_detect(a,"bcc-csm1-1-m_r1i1p1,rcp85,MEAN") &
str_detect(a,"2099-12-31" )) {
print(csv_file)
} else {
print("nope!")
}
